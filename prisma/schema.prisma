// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        Int     @id @default(autoincrement())
  email     String  @unique @db.VarChar(150)
  password  String  @db.VarChar(250)
  firstname String  @db.VarChar(150)
  lastname  String  @db.VarChar(150)
  phone     String? @db.VarChar(150)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  @@index([email])
  wallets wallets[]
}

enum WalletTransactionStatus {
  COMMIT
  ROLLBACK
}

model wallet_transactions {
  id                                                     Int                     @id @default(autoincrement())
  transaction_ref                                        String                  @db.VarChar(100)
  narration                                              String?                 @db.VarChar(250)
  amount                                                 Decimal                 @db.Decimal(15, 4)
  transaction_type                                       String?                 @db.VarChar(10)
  debit_account_id                                       Int
  credit_account_id                                      Int
  created_at                                             DateTime                @default(now())
  updated_at                                             DateTime                @default(now())
  status                                                 WalletTransactionStatus
  wallets_wallet_transactions_credit_account_idTowallets wallets                 @relation("wallet_transactions_credit_account_idTowallets", fields: [credit_account_id], references: [account_id], onDelete: SetNull, onUpdate: SetNull)
  wallets_wallet_transactions_debit_account_idTowallets  wallets                 @relation("wallet_transactions_debit_account_idTowallets", fields: [debit_account_id], references: [account_id], onDelete: SetNull, onUpdate: SetNull)

  @@unique([transaction_ref, status, debit_account_id, credit_account_id])
}

model wallets {
  account_id   Int      @id @default(autoincrement())
  name         String   @db.VarChar(150)
  description  String?  @db.VarChar(150)
  reference_id String   @db.VarChar(50)
  user_id      Int      @unique
  balance      Decimal  @default(0.0) @db.Decimal(15, 4)
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())

  users                                                               users                 @relation(fields: [user_id], references: [id])
  wallet_transactions_wallet_transactions_credit_account_idTowallets wallet_transactions[] @relation("wallet_transactions_credit_account_idTowallets")
  wallet_transactions_wallet_transactions_debit_account_idTowallets  wallet_transactions[] @relation("wallet_transactions_debit_account_idTowallets")

  @@unique([reference_id])
  @@index([account_id, reference_id])
}
